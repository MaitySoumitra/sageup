<main>
  <h2>Browse Tutors & Institutes</h2>
  <div id="action-container"></div>
  <div id="profiles-container" class="profiles-grid">
    <!-- Profiles will be injected here -->
  </div>
</main>

<script>
  const token = localStorage.getItem('token');

  async function fetchProfiles() {
    try {
      const res = await fetch('/api/profiles');
      const data = await res.json();
      const container = document.getElementById('profiles-container');
      const currentUserId = await getCurrentUserId();

      if (!data.profiles || data.profiles.length === 0) {
        container.innerHTML = '<p>No profiles found.</p>';
        return;
      }

      container.innerHTML = data.profiles.map(profile => {
        const isOwner = currentUserId && profile.user._id === currentUserId;
        return `
        <article class="profile-card">
          <div class="profile-header">
            <h3>${profile.user.name} (${profile.type.replace('_', ' ')})</h3>
            ${isOwner ? `
              <div class="menu-wrapper">
                <button class="menu-button">⋮</button>
                <div class="menu-dropdown">
                  <button class="edit-btn" data-id="${profile._id}">Edit</button>
                  <button class="delete-btn" data-id="${profile._id}">Delete</button>
                </div>
              </div>` : ''}
          </div>
          <p><strong>Subjects:</strong> ${profile.subjectsOffered.join(', ')}</p>
          <p><strong>Location:</strong> ${profile.location}</p>
          <p><strong>Experience:</strong> ${profile.experience} years</p>
          <p><strong>Fees:</strong> ₹${profile.fees} per hour</p>
          <p><strong>Availability:</strong> ${formatAvailability(profile.availability)}</p>
          <p class="description">${profile.description}</p>
          <p><em>Contact: ${profile.user.email}</em></p>
        </article>`;
      }).join('');

      setupActions();

    } catch (err) {
      console.error(err);
      document.getElementById('profiles-container').innerHTML = '<p>Error loading profiles.</p>';
    }
  }

  function setupActions() {
    // Dropdown logic
    document.querySelectorAll('.menu-button').forEach(button => {
      button.addEventListener('click', e => {
        e.stopPropagation();
        const dropdown = button.nextElementSibling;
        document.querySelectorAll('.menu-dropdown').forEach(d => d !== dropdown && d.classList.remove('show'));
        dropdown.classList.toggle('show');
      });
    });

    // Close dropdown on click outside
    document.addEventListener('click', () => {
      document.querySelectorAll('.menu-dropdown').forEach(d => d.classList.remove('show'));
    });

    // Delete profile
    document.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const confirmDelete = confirm("Are you sure you want to delete this profile?");
        if (!confirmDelete) return;

        try {
          const res = await fetch('/api/profiles/me', {
            method: 'DELETE',
            headers: { 'Authorization': 'Bearer ' + token }
          });
          if (res.ok) {
            alert('Profile deleted');
            location.reload();
          } else {
            alert('Failed to delete profile.');
          }
        } catch (err) {
          console.error(err);
          alert('Server error');
        }
      });
    });

    // Edit profile
    document.querySelectorAll('.edit-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        window.location.href = '/edit-profile';
      });
    });
  }

  function formatAvailability(availability) {
    if (!availability || !availability.days || !availability.timeSlots) return 'N/A';
    return `${availability.days.join(', ')} at ${availability.timeSlots.join(', ')}`;
  }

  async function getCurrentUserId() {
    try {
      const res = await fetch('/api/users/profile', {
        headers: {
          'Authorization': 'Bearer ' + token
        }
      });
      const data = await res.json();
      return data.user._id;
    } catch (err) {
      return null;
    }
  }

  async function checkUserProfile() {
    try {
      const res = await fetch('/api/profiles/me', {
        headers: { 'Authorization': 'Bearer ' + token }
      });

      if (res.status === 404) {
        const container = document.getElementById('action-container');
        container.innerHTML = `
          <button id="create-profile-btn" class="create-profile-button">Create Your Profile</button>
        `;
        document.getElementById('create-profile-btn').addEventListener('click', () => {
          window.location.href = '/edit-profile';
        });
      }
    } catch (err) {
      console.error('Profile check failed:', err);
    }
  }

  // Init
  fetchProfiles();
  checkUserProfile();
</script>
